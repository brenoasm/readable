// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostRowDetail matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PostRowDetail
    post={
        Object {
            "author": "thingone",
            "body": "Just kidding. It takes more than 10 minutes to learn technology.",
            "category": "redux",
            "commentCount": 0,
            "deleted": false,
            "id": "1",
            "timestamp": 1468479767190,
            "title": "Learn Redux in 10 minutes!",
            "voteScore": 1,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span>
          <strong>
                    thingone
          </strong>
</span>,
        <span>
          <small>
                    <i
                              className="far fa-calendar"
                              title="Data da postagem"
                    />
                      
                    14/07/2016 04:07
          </small>
</span>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <strong>
            thingone
</strong>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "thingone",
          },
          "ref": null,
          "rendered": "thingone",
          "type": "strong",
        },
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <small>
            <i
                        className="far fa-calendar"
                        title="Data da postagem"
            />
              
            14/07/2016 04:07
</small>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="far fa-calendar"
                title="Data da postagem"
/>,
              "  ",
              "14/07/2016 04:07",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "far fa-calendar",
                "title": "Data da postagem",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "  ",
            "14/07/2016 04:07",
          ],
          "type": "small",
        },
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span>
            <strong>
                        thingone
            </strong>
</span>,
          <span>
            <small>
                        <i
                                    className="far fa-calendar"
                                    title="Data da postagem"
                        />
                          
                        14/07/2016 04:07
            </small>
</span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <strong>
              thingone
</strong>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "thingone",
            },
            "ref": null,
            "rendered": "thingone",
            "type": "strong",
          },
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <small>
              <i
                            className="far fa-calendar"
                            title="Data da postagem"
              />
                
              14/07/2016 04:07
</small>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <i
                  className="far fa-calendar"
                  title="Data da postagem"
/>,
                "  ",
                "14/07/2016 04:07",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "far fa-calendar",
                  "title": "Data da postagem",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "  ",
              "14/07/2016 04:07",
            ],
            "type": "small",
          },
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
