// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToolsRow matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ToolsRow
    onFilterChange={[Function]}
    options={Array []}
    selectedOption=""
    showModal={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <NewPostButton
          handleClick={[Function]}
/>,
        <span>
          <label
                    htmlFor="select-sort-method"
          >
                    Filtrar por: 
          </label>
          <select
                    name="select-sort-method"
                    onChange={[Function]}
                    value=""
          >
                    
          </select>
</span>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="select-sort-method"
>
              Filtrar por: 
</label>,
            <select
              name="select-sort-method"
              onChange={[Function]}
              value=""
>
              
</select>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Filtrar por: ",
              "htmlFor": "select-sort-method",
            },
            "ref": null,
            "rendered": "Filtrar por: ",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "name": "select-sort-method",
              "onChange": [Function],
              "value": "",
            },
            "ref": null,
            "rendered": Array [],
            "type": "select",
          },
        ],
        "type": "span",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <NewPostButton
            handleClick={[Function]}
/>,
          <span>
            <label
                        htmlFor="select-sort-method"
            >
                        Filtrar por: 
            </label>
            <select
                        name="select-sort-method"
                        onChange={[Function]}
                        value=""
            >
                        
            </select>
</span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="select-sort-method"
>
                Filtrar por: 
</label>,
              <select
                name="select-sort-method"
                onChange={[Function]}
                value=""
>
                
</select>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Filtrar por: ",
                "htmlFor": "select-sort-method",
              },
              "ref": null,
              "rendered": "Filtrar por: ",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
                "name": "select-sort-method",
                "onChange": [Function],
                "value": "",
              },
              "ref": null,
              "rendered": Array [],
              "type": "select",
            },
          ],
          "type": "span",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
