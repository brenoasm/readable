// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div>
           
</div>,
        <div>
          <BrowserRouter>
                    <Switch>
                              <Route
                                        component={[Function]}
                                        path="/not-found"
                              />
                              <Route
                                        component={[Function]}
                                        path="/posts/:id"
                              />
                              <Route
                                        component={[Function]}
                                        path="/:categoryName"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/"
                              />
                    </Switch>
          </BrowserRouter>
          <ModalPostForm
                    disabledSubmit={false}
                    handleCancel={[Function]}
                    handleClose={undefined}
                    handleSubmit={[Function]}
                    modalIsVisible={false}
          />
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": " ",
        },
        "ref": null,
        "rendered": " ",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <BrowserRouter>
              <Switch>
                            <Route
                                          component={[Function]}
                                          path="/not-found"
                            />
                            <Route
                                          component={[Function]}
                                          path="/posts/:id"
                            />
                            <Route
                                          component={[Function]}
                                          path="/:categoryName"
                            />
                            <Route
                                          component={[Function]}
                                          exact={true}
                                          path="/"
                            />
              </Switch>
</BrowserRouter>,
            <ModalPostForm
              disabledSubmit={false}
              handleCancel={[Function]}
              handleClose={undefined}
              handleSubmit={[Function]}
              modalIsVisible={false}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                                component={[Function]}
                                path="/not-found"
                />
                <Route
                                component={[Function]}
                                path="/posts/:id"
                />
                <Route
                                component={[Function]}
                                path="/:categoryName"
                />
                <Route
                                component={[Function]}
                                exact={true}
                                path="/"
                />
</Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    path="/not-found"
/>,
                  <Route
                    component={[Function]}
                    path="/posts/:id"
/>,
                  <Route
                    component={[Function]}
                    path="/:categoryName"
/>,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/not-found",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/posts/:id",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/:categoryName",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "disabledSubmit": false,
              "handleCancel": [Function],
              "handleClose": undefined,
              "handleSubmit": [Function],
              "modalIsVisible": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div>
             
</div>,
          <div>
            <BrowserRouter>
                        <Switch>
                                    <Route
                                                component={[Function]}
                                                path="/not-found"
                                    />
                                    <Route
                                                component={[Function]}
                                                path="/posts/:id"
                                    />
                                    <Route
                                                component={[Function]}
                                                path="/:categoryName"
                                    />
                                    <Route
                                                component={[Function]}
                                                exact={true}
                                                path="/"
                                    />
                        </Switch>
            </BrowserRouter>
            <ModalPostForm
                        disabledSubmit={false}
                        handleCancel={[Function]}
                        handleClose={undefined}
                        handleSubmit={[Function]}
                        modalIsVisible={false}
            />
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " ",
          },
          "ref": null,
          "rendered": " ",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <BrowserRouter>
                <Switch>
                                <Route
                                                component={[Function]}
                                                path="/not-found"
                                />
                                <Route
                                                component={[Function]}
                                                path="/posts/:id"
                                />
                                <Route
                                                component={[Function]}
                                                path="/:categoryName"
                                />
                                <Route
                                                component={[Function]}
                                                exact={true}
                                                path="/"
                                />
                </Switch>
</BrowserRouter>,
              <ModalPostForm
                disabledSubmit={false}
                handleCancel={[Function]}
                handleClose={undefined}
                handleSubmit={[Function]}
                modalIsVisible={false}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Switch>
                  <Route
                                    component={[Function]}
                                    path="/not-found"
                  />
                  <Route
                                    component={[Function]}
                                    path="/posts/:id"
                  />
                  <Route
                                    component={[Function]}
                                    path="/:categoryName"
                  />
                  <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/"
                  />
</Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      path="/not-found"
/>,
                    <Route
                      component={[Function]}
                      path="/posts/:id"
/>,
                    <Route
                      component={[Function]}
                      path="/:categoryName"
/>,
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/not-found",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/posts/:id",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/:categoryName",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "disabledSubmit": false,
                "handleCancel": [Function],
                "handleClose": undefined,
                "handleSubmit": [Function],
                "modalIsVisible": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
