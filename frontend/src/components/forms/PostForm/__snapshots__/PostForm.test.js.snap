// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostForm matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PostForm
    handleInput={[Function]}
    properties={
        Object {
            "author": Object {
              "errors": Array [],
              "isDirty": false,
              "isFormField": true,
              "isValid": false,
              "name": "author",
              "originalValue": "",
              "validations": Array [],
              "value": "",
            },
            "body": Object {
              "errors": Array [],
              "isDirty": false,
              "isFormField": true,
              "isValid": false,
              "name": "body",
              "originalValue": "",
              "validations": Array [],
              "value": "",
            },
            "category": Object {
              "errors": Array [],
              "isDirty": false,
              "isFormField": true,
              "isValid": false,
              "name": "category",
              "options": Array [
                Object {
                  "label": "react",
                  "value": "react",
                },
                Object {
                  "label": "redux",
                  "value": "redux",
                },
                Object {
                  "label": "udacity",
                  "value": "udacity",
                },
              ],
              "originalValue": "",
              "validations": Array [],
              "value": "",
            },
            "id": Object {
              "errors": Array [],
              "isDirty": false,
              "isFormField": false,
              "isValid": false,
              "name": "id",
              "originalValue": "",
              "value": "",
            },
            "timestamp": Object {
              "errors": Array [],
              "isDirty": false,
              "isFormField": false,
              "isValid": false,
              "name": "timestamp",
              "originalValue": "",
              "value": "",
            },
            "title": Object {
              "errors": Array [],
              "isDirty": false,
              "isFormField": true,
              "isValid": false,
              "name": "title",
              "originalValue": "",
              "validations": Array [],
              "value": "",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Input
          className=""
          errors={Array []}
          handleChange={[Function]}
          id=""
          name="author"
          placeholder=""
          title="Autor: "
          type="text"
          value=""
/>,
        <Input
          className=""
          errors={Array []}
          handleChange={[Function]}
          id=""
          name="title"
          placeholder=""
          title="Titulo: "
          type="text"
          value=""
/>,
        <Select
          className=""
          errors={Array []}
          handleChange={[Function]}
          id=""
          name="category"
          options={
                    Array [
                              Object {
                                "label": "react",
                                "value": "react",
                              },
                              Object {
                                "label": "redux",
                                "value": "redux",
                              },
                              Object {
                                "label": "udacity",
                                "value": "udacity",
                              },
                            ]
          }
          title="Categoria: "
          value=""
/>,
        <TextArea
          className=""
          errors={Array []}
          handleChange={[Function]}
          id=""
          name="body"
          title="Descrição: "
          value=""
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "",
          "errors": Array [],
          "handleChange": [Function],
          "id": "",
          "name": "author",
          "placeholder": "",
          "title": "Autor: ",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "",
          "errors": Array [],
          "handleChange": [Function],
          "id": "",
          "name": "title",
          "placeholder": "",
          "title": "Titulo: ",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "",
          "errors": Array [],
          "handleChange": [Function],
          "id": "",
          "name": "category",
          "options": Array [
            Object {
              "label": "react",
              "value": "react",
            },
            Object {
              "label": "redux",
              "value": "redux",
            },
            Object {
              "label": "udacity",
              "value": "udacity",
            },
          ],
          "title": "Categoria: ",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "",
          "errors": Array [],
          "handleChange": [Function],
          "id": "",
          "name": "body",
          "title": "Descrição: ",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Input
            className=""
            errors={Array []}
            handleChange={[Function]}
            id=""
            name="author"
            placeholder=""
            title="Autor: "
            type="text"
            value=""
/>,
          <Input
            className=""
            errors={Array []}
            handleChange={[Function]}
            id=""
            name="title"
            placeholder=""
            title="Titulo: "
            type="text"
            value=""
/>,
          <Select
            className=""
            errors={Array []}
            handleChange={[Function]}
            id=""
            name="category"
            options={
                        Array [
                                    Object {
                                      "label": "react",
                                      "value": "react",
                                    },
                                    Object {
                                      "label": "redux",
                                      "value": "redux",
                                    },
                                    Object {
                                      "label": "udacity",
                                      "value": "udacity",
                                    },
                                  ]
            }
            title="Categoria: "
            value=""
/>,
          <TextArea
            className=""
            errors={Array []}
            handleChange={[Function]}
            id=""
            name="body"
            title="Descrição: "
            value=""
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "",
            "errors": Array [],
            "handleChange": [Function],
            "id": "",
            "name": "author",
            "placeholder": "",
            "title": "Autor: ",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "",
            "errors": Array [],
            "handleChange": [Function],
            "id": "",
            "name": "title",
            "placeholder": "",
            "title": "Titulo: ",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "",
            "errors": Array [],
            "handleChange": [Function],
            "id": "",
            "name": "category",
            "options": Array [
              Object {
                "label": "react",
                "value": "react",
              },
              Object {
                "label": "redux",
                "value": "redux",
              },
              Object {
                "label": "udacity",
                "value": "udacity",
              },
            ],
            "title": "Categoria: ",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "",
            "errors": Array [],
            "handleChange": [Function],
            "id": "",
            "name": "body",
            "title": "Descrição: ",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
