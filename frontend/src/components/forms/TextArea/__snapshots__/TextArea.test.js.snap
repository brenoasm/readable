// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextArea matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TextArea
    className=""
    errors={Array []}
    handleChange={[Function]}
    id="author"
    name="author"
    title="author"
    value="author"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <label
          htmlFor="author"
>
          author
</label>,
        <textarea
          className=""
          id="author"
          name="author"
          onChange={[Function]}
          value="author"
/>,
        <FormErrorMessage
          errors={Array []}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "author",
          "htmlFor": "author",
        },
        "ref": null,
        "rendered": "author",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "",
          "id": "author",
          "name": "author",
          "onChange": [Function],
          "value": "author",
        },
        "ref": null,
        "rendered": null,
        "type": "textarea",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "errors": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <label
            htmlFor="author"
>
            author
</label>,
          <textarea
            className=""
            id="author"
            name="author"
            onChange={[Function]}
            value="author"
/>,
          <FormErrorMessage
            errors={Array []}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "author",
            "htmlFor": "author",
          },
          "ref": null,
          "rendered": "author",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "",
            "id": "author",
            "name": "author",
            "onChange": [Function],
            "value": "author",
          },
          "ref": null,
          "rendered": null,
          "type": "textarea",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "errors": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
